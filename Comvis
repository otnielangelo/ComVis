import cv2
import numpy as np
import os
from matplotlib import pyplot as plt

img = cv2.imread('gambar')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

#preprocessing
_, thresh = cv2.threshold(gray, 100, 255, cv2.THRESH_XYZ) (binary/trunc/otsu/tozero)

mean_blur = cv2.blur(img, (11, 11))
gaussian_blur = cv2.GaussianBlur(img, (11, 11), 5.0)
median_blur = cv2.medianBlur(img, 11)
bilateral_blur = cv2.bilateralFilter(img, 5, 150, 150)

#edge
sobel_x = cv2.Sobel(gray, cv2.CV_64F, 1, 0, 5) 
sobel_y = cv2.Sobel(gray, cv2.CV_64F, 0, 1, 5)

laplacian = cv2.Laplacian(gray, cv2.CV_64F)
laplacian_uint8 = np.uint8(np.absolute(laplacian))

canny = cv2.Canny(gray, 100, 200)

#corner
gray = np.float32(gray) 
harris_result = cv2.cornerHarris(gray, 2, 5, 0.04) 
img_res =img.copy() img_res[harris_result > 0.01*harris_result.max()] = [255, 0, 0]

fast = cv2.FastFeatureDetector_create()
keypoints = fast.detect(img)
fast_result = img.copy()
cv2.drawKeypoints(img, keypoints, fast_result, color=[0, 0, 255])
fast_result = cv2.cvtColor(fast_result, cv2.COLOR_BGR2RGB)

orb = cv2.ORB_create()
keypoints = orb.detect(img)
orb_result = img.copy()
cv2.drawKeypoints(img, keypoints, orb_result, color=[0, 0, 255])
orb_result = cv2.cvtColor(orb_result, cv2.COLOR_BGR2RGB)

#matching
sift = cv2.SIFT/ORB/AKAZE_create()

kp_object, des_object = sift.detectAndCompute(img_object, None)
kp_scene, des_scene = sift.detectAndCompute(img_scene, None)

des_object = des_object.astype('f') des_scene = des_scene.astype('f')

index_params = dict(algorithm=0)
search_params = dict(checks=50)
flann = cv2.FlannBasedMatcher(index_params, search_params)

matches = flann.knnMatch(des_object, des_scene, 2) 
matchesMask = [] 
for i in range(0, len(matches)): 	                                                    —matchesMask.append([0, 0])

total_match = 0
for i, (m, n) in enumerate(matches):
— if m.distance < 0.7 * n.distance:
—---matchesMask[i] = [1, 0] 
—---total_match += 1

img_res = cv2.drawMatchesKnn( img_object, kp_object, img_scene, kp_scene, matches, None, matchColor = [0, 255, 0], singlePointColor = [255, 0, 0], matchesMask = matchesMask )
plt.imshow(img_res)
plt.show()

#tampilin gambar
cv2.imshow('Gray', gray_image) 
cv2.waitKey(0)

result_image = [imgA, imgB, imgC, imgD, dst]
result_desc = ['ini A', 'ini B', 'ini C', 'ini D', 'dst']
plt.figure(1, figsize=(8, 8))
for i, (curr_image, curr_desc) in enumerate(zip(result_image, result_desc)):
    plt.subplot(3, 3, (i+1))
    plt.imshow(curr_image, cmap='gray')
    plt.title(curr_desc)
    plt.xticks([])
    plt.yticks([])
plt.show()

#read gambar
directory = 'images'
for i, filename in enumerate(os.listdir(directory)):
    img = cv2.imread(directory + '/' + filename)
